// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$calc-name: 'calc'
$calc-x: 0px
$calc-y: 0px
$calc-offset-x: 0px
$calc-offset-y: 0px
$calc-width: 120px
$calc-height: 84px
$calc-total-width: 210px
$calc-total-height: 168px
$calc-image: 'sprite.png'
$calc: (0px, 0px, 0px, 0px, 120px, 84px, 210px, 168px, 'sprite.png', 'calc', )
$fail-name: 'fail'
$fail-x: 130px
$fail-y: 0px
$fail-offset-x: -130px
$fail-offset-y: 0px
$fail-width: 80px
$fail-height: 74px
$fail-total-width: 210px
$fail-total-height: 168px
$fail-image: 'sprite.png'
$fail: (130px, 0px, -130px, 0px, 80px, 74px, 210px, 168px, 'sprite.png', 'fail', )
$header1-name: 'header1'
$header1-x: 0px
$header1-y: 150px
$header1-offset-x: 0px
$header1-offset-y: -150px
$header1-width: 25px
$header1-height: 18px
$header1-total-width: 210px
$header1-total-height: 168px
$header1-image: 'sprite.png'
$header1: (0px, 150px, 0px, -150px, 25px, 18px, 210px, 168px, 'sprite.png', 'header1', )
$header2-name: 'header2'
$header2-x: 156px
$header2-y: 94px
$header2-offset-x: -156px
$header2-offset-y: -94px
$header2-width: 21px
$header2-height: 26px
$header2-total-width: 210px
$header2-total-height: 168px
$header2-image: 'sprite.png'
$header2: (156px, 94px, -156px, -94px, 21px, 26px, 210px, 168px, 'sprite.png', 'header2', )
$phone-name: 'phone'
$phone-x: 35px
$phone-y: 150px
$phone-offset-x: -35px
$phone-offset-y: -150px
$phone-width: 18px
$phone-height: 18px
$phone-total-width: 210px
$phone-total-height: 168px
$phone-image: 'sprite.png'
$phone: (35px, 150px, -35px, -150px, 18px, 18px, 210px, 168px, 'sprite.png', 'phone', )
$play-name: 'play'
$play-x: 187px
$play-y: 94px
$play-offset-x: -187px
$play-offset-y: -94px
$play-width: 20px
$play-height: 24px
$play-total-width: 210px
$play-total-height: 168px
$play-image: 'sprite.png'
$play: (187px, 94px, -187px, -94px, 20px, 24px, 210px, 168px, 'sprite.png', 'play', )
$price1-name: 'price1'
$price1-x: 101px
$price1-y: 94px
$price1-offset-x: -101px
$price1-offset-y: -94px
$price1-width: 45px
$price1-height: 35px
$price1-total-width: 210px
$price1-total-height: 168px
$price1-image: 'sprite.png'
$price1: (101px, 94px, -101px, -94px, 45px, 35px, 210px, 168px, 'sprite.png', 'price1', )
$price2-name: 'price2'
$price2-x: 0px
$price2-y: 94px
$price2-offset-x: 0px
$price2-offset-y: -94px
$price2-width: 45px
$price2-height: 46px
$price2-total-width: 210px
$price2-total-height: 168px
$price2-image: 'sprite.png'
$price2: (0px, 94px, 0px, -94px, 45px, 46px, 210px, 168px, 'sprite.png', 'price2', )
$price3-name: 'price3'
$price3-x: 55px
$price3-y: 94px
$price3-offset-x: -55px
$price3-offset-y: -94px
$price3-width: 36px
$price3-height: 46px
$price3-total-width: 210px
$price3-total-height: 168px
$price3-image: 'sprite.png'
$price3: (55px, 94px, -55px, -94px, 36px, 46px, 210px, 168px, 'sprite.png', 'price3', )
$spritesheet-width: 210px
$spritesheet-height: 168px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($calc, $fail, $header1, $header2, $phone, $play, $price1, $price2, $price3, )
$spritesheet: (210px, 168px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
